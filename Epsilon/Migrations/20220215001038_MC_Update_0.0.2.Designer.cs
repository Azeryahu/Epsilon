// <auto-generated />
using System;
using Epsilon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Epsilon.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220215001038_MC_Update_0.0.2")]
    partial class MC_Update_002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Epsilon.Bounty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BonusPayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DateTimeCompleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateTimeCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("Payout")
                        .HasColumnType("real");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<string>("TargetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("TimeoutDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Bounties");
                });

            modelBuilder.Entity("Epsilon.Crew", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CaptainID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("CaptainUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CrewStatus")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DateTimeDisbanded")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateTimeFormed")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NumberOfCrew")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("Epsilon.Industry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UserID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Indy");
                });

            modelBuilder.Entity("Epsilon.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EndDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("JobClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("JobLeadID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("JobLeadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JobStatus")
                        .HasColumnType("bit");

                    b.Property<string>("JobType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfGroups")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("StartDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalNumberOfSlots")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Epsilon.Job+Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GroupLeadID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GroupLeadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GroupStatus")
                        .HasColumnType("bit");

                    b.Property<string>("JobClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTeams")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Epsilon.Job+Group+Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumbeOfSlots")
                        .HasColumnType("int");

                    b.Property<decimal>("TeamLeadID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("TeamLeadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TeamStatus")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Epsilon.MCLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateLooted")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Discoverer")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Looter")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("MinecraftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("ZCoordinate")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MCLocations");
                });

            modelBuilder.Entity("Epsilon.Mission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DateFormed")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EndDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MissionActiveStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("MissionLeadID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("MissionLeadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MissionStartedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("StartDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Epsilon.MissionXRef", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MissionID")
                        .HasColumnType("int");

                    b.Property<bool>("Ready")
                        .HasColumnType("bit");

                    b.Property<decimal>("UserID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("MissionXRefs");
                });

            modelBuilder.Entity("Epsilon.Op", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DateFormed")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("EndDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("int");

                    b.Property<bool>("OpActiveStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpLeadID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("OpLeadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OpStartedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("OpType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("StartDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Ops");
                });

            modelBuilder.Entity("Epsilon.OpsXRef", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OpID")
                        .HasColumnType("int");

                    b.Property<bool>("Ready")
                        .HasColumnType("bit");

                    b.Property<decimal>("UserID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("OpsXRefs");
                });

            modelBuilder.Entity("Epsilon.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DualUniverseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Epsilon.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Standing")
                        .HasColumnType("real");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Epsilon.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanJoin")
                        .HasColumnType("bit");

                    b.Property<int>("CompletedMissions")
                        .HasColumnType("int");

                    b.Property<int>("CrewID")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DiscordUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscordUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DualUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enlisted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FactionJoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JoinedFaction")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastMessageRecieved")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NumberOfAttempts")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWarnings")
                        .HasColumnType("int");

                    b.Property<float>("PersonalStanding")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset?>("PromotionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PromotionPointBalance")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ServerJoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("VerificationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
