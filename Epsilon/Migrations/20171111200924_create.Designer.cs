// <auto-generated />
using Epsilon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Epsilon.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20171111200924_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Epsilon.Alliance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("AllianceDisbandedDate");

                    b.Property<DateTimeOffset?>("AllianceFoundedDate");

                    b.Property<string>("AllianceID");

                    b.Property<string>("AllianceName");

                    b.Property<decimal>("AllianceStanding");

                    b.Property<int>("MemberCount");

                    b.Property<int>("OrganizationCount");

                    b.HasKey("ID");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("Epsilon.Knight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllianceName");

                    b.Property<decimal>("AllianceStanding");

                    b.Property<int>("CompletedMissions");

                    b.Property<int>("DaysUntilPromotion");

                    b.Property<DateTimeOffset?>("EnlistmentDate");

                    b.Property<DateTimeOffset?>("OfficerGradDate");

                    b.Property<string>("OrganizationName");

                    b.Property<decimal>("OrganizationStanding");

                    b.Property<decimal>("PersonalStanding");

                    b.Property<int>("PointBalance");

                    b.Property<string>("RankTitle");

                    b.Property<DateTimeOffset?>("ServerJoinDate");

                    b.Property<string>("UserID");

                    b.Property<string>("Username");

                    b.Property<bool>("Verified");

                    b.HasKey("ID");

                    b.ToTable("Knights");
                });

            modelBuilder.Entity("Epsilon.Mission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("BonusEndDateTime");

                    b.Property<DateTimeOffset?>("MissionCompletedDateTime");

                    b.Property<string>("MissionName");

                    b.Property<string>("MissionReward");

                    b.Property<DateTimeOffset?>("MissionStartDateTime");

                    b.Property<decimal>("StandingPercentIncrease");

                    b.Property<DateTimeOffset?>("TennetiveCompletionDateTime");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Epsilon.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllianceID");

                    b.Property<int>("MemberCount");

                    b.Property<DateTimeOffset?>("OrganizationDisbandedDate");

                    b.Property<DateTimeOffset?>("OrganizationFoundedDate");

                    b.Property<string>("OrganizationID");

                    b.Property<decimal>("OrganizationStanding");

                    b.Property<string>("OrganiztionName");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Epsilon.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllianceName");

                    b.Property<decimal>("AllianceStanding");

                    b.Property<int>("CompletedMissions");

                    b.Property<bool>("Joined");

                    b.Property<string>("OrganizationName");

                    b.Property<decimal>("OrganizationStanding");

                    b.Property<decimal>("PersonalStanding");

                    b.Property<DateTimeOffset?>("ServerJoinDate");

                    b.Property<string>("Title");

                    b.Property<string>("UserID");

                    b.Property<string>("Username");

                    b.Property<bool>("Verified");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
