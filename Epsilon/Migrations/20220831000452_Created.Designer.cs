// <auto-generated />
using System;
using Epsilon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Epsilon.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220831000452_Created")]
    partial class Created
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Epsilon.MCLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateLooted")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Discoverer")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Looter")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("MinecraftID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("ZCoordinate")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MCLocations");
                });

            modelBuilder.Entity("Epsilon.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanJoin")
                        .HasColumnType("bit");

                    b.Property<int>("CompletedMissions")
                        .HasColumnType("int");

                    b.Property<int>("CrewID")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DiscordUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscordUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DualUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enlisted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FactionJoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JoinedFaction")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastMessageRecieved")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NumberOfAttempts")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWarnings")
                        .HasColumnType("int");

                    b.Property<float>("PersonalStanding")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset?>("PromotionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PromotionPointBalance")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ServerJoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("VerificationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
